{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-master-2022\\\\2-React-Tour_Project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Loading from './Components/Loading';\nimport Tours from './Components/Tours';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [loading, setloading] = useState(false);\n  const [tours, setTours] = useState([]);\n  const fetchTourse = async();\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Tours, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"ZyghB2XYqTKqK6npbVu2c49KhVc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/React-master-2022/2-React-Tour_Project/src/App.js"],"names":["React","useState","Loading","Tours","App","loading","setloading","tours","setTours","fetchTourse","async"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMQ,WAAW,GAAGC,KAAK,EAAzB;;AAEA,MAAGL,OAAH,EAAW;AACT,wBACE;AAAA,6BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA,qBADF;AAKD;;AACD,sBACE;AAAA,2BACC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADD,mBADF;AAKD,CAlBD;;GAAMD,G;;KAAAA,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Loading from './Components/Loading';\nimport Tours from './Components/Tours';\n\nconst App = () => {\n  const [loading, setloading] = useState(false);\n  const [tours, setTours] = useState([]);\n\n  const fetchTourse = async ()\n\n  if(loading){\n    return(\n      <>\n      <Loading/>\n      </>\n    )\n  }\n  return (\n    <>\n     <Tours/>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}