{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-master-2022\\\\3-React-Reviews-App\\\\src\\\\Review.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\nimport styles from './our.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Review = () => {\n  _s();\n\n  const [index, setIndex] = useState(1);\n  const {\n    name,\n    job,\n    image,\n    text,\n    info\n  } = people[index]; // to avoid the error after completiton of array wts nex or prev array wts pre???\n\n  const checkNumber = number => {\n    if (number > people.length - 1) {\n      return 0;\n    }\n\n    if (number < 0) {\n      return people.length - 1;\n    } else {\n      return number;\n    }\n  }; //random persons\n\n\n  const randomPersons = () => {\n    let randomNumber = Math.floor(Math.random() * people.length);\n\n    if (randomNumber === index) {\n      randomNumber = index + 1;\n    }\n\n    setIndex();\n  };\n\n  const nextPerson = () => {\n    setIndex(index => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const PrevPerson = () => {\n    setIndex(index => {\n      let NewIndex = index - 1;\n      return checkNumber(NewIndex);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"review\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: name,\n        className: \"person-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"quote-icon\",\n        children: /*#__PURE__*/_jsxDEV(FaQuoteRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"author\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"job\",\n      children: job\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"info\",\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-btn\",\n        onClick: nextPerson,\n        children: /*#__PURE__*/_jsxDEV(FaChevronLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"prev-btn\",\n        onClick: PrevPerson,\n        children: /*#__PURE__*/_jsxDEV(FaChevronRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"random-btn\",\n        onClick: randomPersons,\n        children: \"surprise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Review, \"ulg2LOBN7MoMGtnTn53zghbgG7c=\");\n\n_c = Review;\nexport default Review;\n\nvar _c;\n\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"sources":["D:/React-master-2022/3-React-Reviews-App/src/Review.jsx"],"names":["React","useState","people","FaChevronLeft","FaChevronRight","FaQuoteRight","styles","Review","index","setIndex","name","job","image","text","info","checkNumber","number","length","randomPersons","randomNumber","Math","floor","random","nextPerson","newIndex","PrevPerson","NewIndex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport people from './data';\r\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\r\nimport styles from './our.module.css';\r\nconst Review = () => {\r\n  const [index, setIndex] = useState(1);\r\n  const { name, job, image, text, info } = people[index];\r\n  // to avoid the error after completiton of array wts nex or prev array wts pre???\r\n\r\n  const checkNumber = (number) => {\r\n    if (number > people.length - 1) {\r\n      return 0;\r\n    }\r\n    if (number < 0) {\r\n      return people.length - 1;\r\n    } else {\r\n      return number;\r\n    }\r\n  };\r\n\r\n  //random persons\r\n  const randomPersons = () => {\r\n    let randomNumber = Math.floor(Math.random() * people.length);\r\n     if(randomNumber === index){\r\n         randomNumber = index+1;\r\n     }\r\n     setIndex()\r\n  };\r\n\r\n  const nextPerson = () => {\r\n    setIndex((index) => {\r\n      let newIndex = index + 1;\r\n      return checkNumber(newIndex);\r\n    });\r\n  };\r\n\r\n  const PrevPerson = () => {\r\n    setIndex((index) => {\r\n      let NewIndex = index - 1;\r\n      return checkNumber(NewIndex);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <article className='review'>\r\n      <div className='img-container'>\r\n        <img src={image} alt={name} className='person-img' />\r\n        <span className='quote-icon'>\r\n          <FaQuoteRight />\r\n        </span>\r\n      </div>\r\n      <h4 className='author'>{name}</h4>\r\n      <p className='job'>{job}</p>\r\n      <p className='info'>{info}</p>\r\n      <p className='text'>{text}</p>\r\n      <div className='button-container'>\r\n        <button className='next-btn' onClick={nextPerson}>\r\n          <FaChevronLeft />\r\n        </button>\r\n        <button className='prev-btn' onClick={PrevPerson}>\r\n          <FaChevronRight />\r\n        </button>\r\n        <button className='random-btn' onClick={randomPersons}>\r\n          surprise\r\n        </button>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n"]},"metadata":{},"sourceType":"module"}